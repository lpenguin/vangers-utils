import array
from os.path import join, dirname
from typing import Tuple, List, Dict

import numpy as np


def bit(x, n):
    return (x & (1 << n)) >> n


def tobin(x):
    r = "{0:b}".format(x)
    #     return r
    return ('0' * (8 - len(r))) + r


def scale(x, mask, color_name):
    l = sum(c == color_name for c in mask)
    m = 2 ** l
    return int(255 * ((x) / (m - 1)))


def palette_color(value, mask):
    colori = {
        'r': 0,
        'g': 0,
        'b': 0
    }

    for i, m in enumerate(mask):
        if m not in {'r', 'g', 'b'}:
            continue

        v = bit(value, len(mask) - i - 1)
        #     color[m] = color[m] + str(v)
        colori[m] = colori[m] * 2 + v

    # print(colori)
    r = scale(colori['r'], mask, 'r')
    g = scale(colori['g'], mask, 'g')
    b = scale(colori['b'], mask, 'b')
    return (r, g, b)


def make_palette(mask):
    palette = []
    for x in range(256):
        xs = tobin(x)
        (rc, gc, bc) = palette_color(x, mask)
        c = int((rc + gc + bc) / 3)
        palette.append(c)
        palette.append(c)
        palette.append(c)
    return palette


def color_index(c: Tuple[int, int, int])->int:
    r, g, b = c
    return b + 256 * g + 256 * 256 * r


def create_palette_mapping(pal: List[int])->Dict[int, np.uint8]:
    res = {}  # type: Dict[int, np.uint8]
    for i in range(0, len(pal), 3):
        r, g, b = pal[i], pal[i + 1], pal[i + 2]
        index = color_index((r, g, b))
        if index in res:
            continue
        res[index] = np.uint8(i // 3)

    return res


def read_palette_from_file(filename: str) -> List[int]:
    with open(filename, 'rb') as f:
        a = array.array('B')
        a.fromfile(f, 768)
        return a.tolist()


def read_palette(palette_name: str) -> List[int]:
    filename = join(dirname(__file__), 'data', 'pal', '{}.pal'.format(palette_name))
    return read_palette_from_file(filename)


PALETTE = [0, 0, 0, 8, 12, 20, 24, 24, 40, 24, 32, 48, 32,
           32, 52, 36, 44, 60, 52, 56, 72, 60, 68, 84, 76, 80,
           96, 88, 96, 112, 84, 92, 112, 80, 88, 108, 76, 84, 104,
           72, 80, 100, 72, 80, 100, 72, 80, 100, 76, 84, 104, 80,
           88, 112, 84, 92, 112, 88, 96, 120, 92, 100, 124, 96, 104,
           128, 100, 108, 132, 104, 112, 136, 108, 116, 140, 112, 120, 144,
           116, 128, 152, 120, 128, 156, 124, 136, 160, 128, 136, 164, 132,
           144, 168, 136, 144, 172, 8, 12, 4, 24, 32, 16, 28, 36,
           20, 32, 40, 24, 40, 48, 28, 44, 52, 32, 48, 60, 36,
           52, 64, 40, 60, 72, 44, 64, 76, 48, 68, 80, 48, 72,
           84, 56, 76, 88, 56, 80, 92, 60, 84, 96, 64, 88, 104,
           68, 92, 104, 72, 96, 112, 76, 100, 116, 80, 104, 120, 84,
           108, 124, 88, 112, 128, 88, 116, 132, 92, 120, 136, 96, 124,
           140, 100, 128, 144, 104, 132, 148, 108, 136, 152, 112, 140, 156,
           116, 144, 160, 120, 148, 164, 120, 152, 168, 128, 8, 8, 4,
           36, 32, 24, 56, 48, 40, 76, 64, 52, 96, 80, 64, 112,
           96, 76, 132, 112, 88, 152, 128, 104, 0, 0, 0, 8, 8,
           8, 16, 16, 12, 20, 20, 16, 24, 24, 20, 28, 32, 24,
           32, 36, 28, 40, 40, 32, 44, 48, 40, 48, 52, 40, 56,
           56, 48, 68, 76, 64, 76, 88, 72, 84, 100, 84, 96, 112,
           96, 104, 124, 104, 48, 40, 12, 80, 68, 24, 88, 72, 24,
           92, 76, 28, 100, 84, 28, 104, 88, 32, 108, 92, 32, 116,
           96, 32, 120, 100, 36, 128, 108, 36, 132, 112, 40, 140, 116,
           40, 144, 120, 40, 148, 124, 44, 156, 132, 44, 160, 136, 48,
           124, 0, 0, 184, 0, 4, 204, 0, 8, 228, 0, 8, 248,
           0, 8, 252, 0, 12, 252, 0, 12, 252, 0, 16, 156, 156,
           0, 208, 208, 0, 232, 232, 0, 252, 252, 0, 252, 252, 0,
           252, 252, 0, 252, 252, 0, 252, 252, 0, 8, 12, 12, 28,
           40, 28, 36, 52, 36, 44, 64, 44, 52, 72, 52, 60, 84,
           60, 68, 96, 68, 76, 108, 72, 32, 24, 0, 44, 28, 0,
           56, 32, 0, 72, 40, 4, 88, 44, 4, 100, 48, 4, 112,
           56, 4, 128, 60, 8, 144, 64, 8, 156, 72, 8, 168, 76,
           8, 184, 80, 8, 200, 88, 8, 212, 92, 8, 224, 100, 12,
           240, 104, 12, 4, 8, 20, 8, 12, 36, 12, 16, 48, 16,
           16, 64, 20, 20, 80, 24, 24, 96, 28, 24, 108, 32, 28,
           124, 36, 32, 136, 40, 32, 152, 44, 36, 168, 48, 40, 184,
           52, 40, 196, 56, 44, 212, 60, 48, 224, 64, 48, 240, 16,
           16, 0, 28, 28, 0, 44, 44, 0, 60, 56, 0, 72, 72,
           0, 88, 88, 0, 104, 104, 0, 120, 116, 0, 136, 132, 0,
           148, 144, 0, 164, 160, 0, 180, 176, 0, 192, 188, 0, 208,
           204, 0, 224, 216, 0, 240, 232, 0, 44, 20, 44, 68, 44,
           68, 92, 68, 96, 120, 88, 120, 144, 112, 148, 168, 136, 172,
           196, 160, 200, 220, 180, 228, 16, 4, 0, 16, 8, 0, 16,
           12, 0, 16, 16, 0, 16, 20, 0, 16, 24, 0, 16, 28,
           0, 16, 32, 0, 80, 0, 0, 96, 0, 0, 112, 0, 0,
           132, 0, 0, 148, 0, 0, 168, 0, 0, 184, 0, 0, 200,
           0, 0, 220, 0, 0, 236, 0, 0, 252, 0, 0, 252, 28,
           0, 252, 52, 0, 252, 80, 0, 252, 104, 0, 252, 128, 0,
           252, 156, 0, 252, 180, 0, 252, 208, 0, 252, 232, 0, 252,
           252, 0, 252, 252, 24, 252, 252, 44, 252, 252, 64, 252, 252,
           88, 252, 252, 108, 252, 252, 128, 252, 252, 152, 252, 252, 172,
           252, 252, 192, 252, 252, 216, 252, 252, 252, 0, 0, 0, 16,
           16, 16, 32, 32, 32, 48, 48, 48, 64, 64, 64, 80, 80,
           80, 96, 96, 96, 112, 112, 112, 128, 128, 128, 144, 144, 144,
           160, 160, 160, 176, 176, 176, 192, 192, 192, 208, 208, 208, 224,
           224, 224, 240, 240, 240, 8, 16, 0, 16, 28, 0, 24, 40,
           0, 28, 56, 0, 36, 72, 0, 44, 84, 0, 52, 96, 0,
           56, 112, 0, 64, 124, 0, 72, 140, 0, 80, 152, 0, 88,
           168, 0, 96, 180, 0, 100, 192, 0, 108, 208, 0, 240, 160, 0]
